import java.util.Scanner;

public class StackArray {

    private int[] stack;
    private int top;
    private int maxSize;

    // Constructor to initialize the stack
    public StackArray(int size) {
        stack = new int[size];
        maxSize = size;
        top = -1;
    }

    // Push operation to insert an element into the stack
    public void push(int value) {
        if (top == maxSize - 1) {
            System.out.println("Stack Overflow! Cannot push " + value);
        } else {
            stack[++top] = value;
            System.out.println(value + " pushed into stack.");
        }
    }

    // Pop operation to remove and return the top element from the stack
    public int pop() {
        if (top == -1) {
            System.out.println("Stack Underflow! No element to pop.");
            return -1;
        } else {
            System.out.println(stack[top] + " popped from stack.");
            return stack[top--];
        }
    }

    // Display operation to print the current elements in the stack
    public void display() {
        if (top == -1) {
            System.out.println("Stack is empty.");
        } else {
            System.out.println("Current Stack:");
            for (int i = top; i >= 0; i--) {
                System.out.println(stack[i]);
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter the size of the stack: ");
        int size = sc.nextInt();

        StackArray stack = new StackArray(size);

        int choice;
        do {
            System.out.println("\n1. Push");
            System.out.println("2. Pop");
            System.out.println("3. Display");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter value to push: ");
                    int value = sc.nextInt();
                    stack.push(value);
                    break;
                case 2:
                    stack.pop();
                    break;
                case 3:
                    stack.display();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        } while (choice != 4);

        sc.close();
    }
}
