#include <stdio.h>
#include <stdlib.h>

#define MAX 100

typedef struct {
    int pid;        
    int burstTime;  
    int remainingTime; 
} Process;

void roundRobin(Process processes[], int n, int timeQuantum) {
    int time = 0;
    int completed = 0;
    int i;

    while (completed < n) {
        for (i = 0; i < n; i++) {
            if (processes[i].remainingTime > 0) {
                if (processes[i].remainingTime > timeQuantum) {
                    time += timeQuantum;
                    processes[i].remainingTime -= timeQuantum;
                } else {
                    time += processes[i].remainingTime;
                    processes[i].remainingTime = 0;
                    completed++;
                    printf("Process %d completed at time %d\n", processes[i].pid, time);
                }
            }
        }
    }
}

int main() {
    int n, i, timeQuantum;
    Process processes[MAX];

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        processes[i].pid = i + 1;
        printf("Enter burst time for process %d: ", processes[i].pid);
        scanf("%d", &processes[i].burstTime);
        processes[i].remainingTime = processes[i].burstTime;
    }

    printf("Enter time quantum: ");
    scanf("%d", &timeQuantum);

    roundRobin(processes, n, timeQuantum);

    return 0;
}
